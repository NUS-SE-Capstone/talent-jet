# .github/workflows/tj-exam.yml
name: CI for tj-exam
on:
  push:
    paths:
      - 'tj-exam/**'
  pull_request:
    paths:
      - 'tj-exam/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build talent-jet
        run:
          mvn clean package -DskipTests

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Run Unit Testing
        run:
          mvn clean package

      - name: Run Integration Testing
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: tj-exam
          path: tj-exam/target/*.jar


  snyk:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Snyk CLI
        run:
          npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run:
          snyk auth $SNYK_TOKEN

      - name: Run Snyk to check for vulnerabilities
        run:
          snyk test --severity-threshold=high || true

  release:
    needs: snyk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Download built jar artifact
        uses: actions/download-artifact@v4
        with:
          name: tj-exam
          path: tj-exam/target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Aliyun ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Build and push Docker Image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd tj-exam
          docker build -t crpi-gbndif6v1gbpzzke.cn-hangzhou.personal.cr.aliyuncs.com/talent-jet/tj-exam:$IMAGE_TAG .
          docker push crpi-gbndif6v1gbpzzke.cn-hangzhou.personal.cr.aliyuncs.com/talent-jet/tj-exam:$IMAGE_TAG

      - name: Update image tag in k8s manifest
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          sudo wget -q https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          yq e -i '.spec.template.spec.containers[] |= (select(.name == "tj-exam").image = "crpi-gbndif6v1gbpzzke.cn-hangzhou.personal.cr.aliyuncs.com/talent-jet/tj-exam:" + env(IMAGE_TAG))' k8s/service/tj-exam.yaml

      - name: Commit and push updated k8s manifest to trigger ArgoCD
        env:
          IMAGE_TAG: ${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add k8s/service/tj-exam.yaml
          git commit -m "Update tj-exam image tag to $IMAGE_TAG"
          git push origin HEAD:main