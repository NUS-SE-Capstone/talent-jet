# .github/workflows/tj-user.yml
name: CI/CD for tj-user
on:
  push:
    paths:
      - 'tj-user/**'
  pull_request:
    paths:
      - 'tj-user/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build talent-jet
        run:
          mvn clean install

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Run Unit Testing
        run:
          mvn test

      - name: Run Integration Testing
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: tj-user-jar
          path: tj-user/target/*.jar


  snyk:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Snyk CLI
        run:
          npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run:
          snyk auth $SNYK_TOKEN

      - name: Run Snyk to check for vulnerabilities
        run:
          snyk test --severity-threshold=high || true

  release:
    needs: snyk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Download built jar artifact
        uses: actions/download-artifact@v4
        with:
          name: tj-user-jar
          path: tj-user/target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Aliyun ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Build and push Docker Image
        run: |
          docker compose build tj-user
          docker compose push tj-user

#  deploy:
#    needs: docker-image-build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set up SSH
#        run: |
#          mkdir -p ~/.ssh
#          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
#          chmod 600 ~/.ssh/id_rsa
#          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
#
#      - name: Run Ansible Playbook
#        run: |
#          ansible-playbook infra/ansible/deploy.yml \
#          -i "${{ secrets.DEPLOY_HOST }}," \
#          -u "${{ secrets.DEPLOY_USER }}" \
#          --extra-vars "docker_username=${{ secrets.DOCKERHUB_USERNAME }} target_host=${{ secrets.DEPLOY_HOST }} service_name=tj-user"